name: Build Front Docker image

on:
    push:
        branches:
            - main

env:
    REGISTRY: ghcr.io
    REPOSITORY: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            # Set up BuildKit Docker container builder with multi-platform support
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                  install: true

            # Login to GitHub Container Registry
            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # Get version from frontend/package.json
            - name: Get Version from frontend/package.json
              id: get_version
              run: |
                  version=$(jq -r .version package.json)
                  echo "Version from package.json: $version"
                  echo "version=$version" >> $GITHUB_ENV

            # Echo the version to verify it's set correctly
            - name: Echo version
              run: echo "Building ${{ env.REGISTRY }}/${{ env.REPOSITORY }}, version ${{ env.version }}"

            # Extract metadata for Docker
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
                  tags: |
                      latest,
                      ${{ env.version }}

            # Build and push Docker image for multiple platforms (amd64 and arm64)
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest,${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.version }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
